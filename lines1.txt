File "lib/ast/dune", line 21, characters 14-28:
21 |   (preprocess (pps ppx_jane))
                   ^^^^^^^^^^^^^^
Warning: .merlin generated is inaccurate. Cannot mix preprocessed and non
preprocessed specificiations.
Split the stanzas into different directories or silence this warning by
adding (allow_approximate_merlin) to your dune-project.
pvar key
F
show_typ
SInt;SInt
gen name: b, id: 0
gen name: a, id: 1
gen name: F, id: 2
pvar key
G
show_typ
SInt;SInt
gen name: b, id: 3
gen name: a, id: 4
gen name: G, id: 5
key
m
gen name: m, id: 6
key
n
gen name: n, id: 7
gen name: Sentry, id: 8
key
a
gen name: a, id: 9
key
b
gen name: b, id: 10
key
a
gen name: a, id: 11
key
b
gen name: b, id: 12
[Main:App:hes Input]
  Sentry : bool =ν ∀m6.∀n7.F n7 m6
  F : int -> int -> bool =μ λa9:int.λb10:int.G a9 b10 || F (a9 + 2) (b10 + 1)
  G : int -> int -> bool =ν λa11:int.λb12:int.a11 > b12 && G (a11 + 2) (b12 + 1)
[Main:App:Simplified]
  Sentry : bool =ν ∀m6.∀n7.F n7 m6
  F : int -> int -> bool =μ λa9:int.λb10:int.G a9 b10 || F (a9 + 2) (b10 + 1)
  G : int -> int -> bool =ν λa11:int.λb12:int.a11 > b12 && G (a11 + 2) (b12 + 1)
[Solver:App:Decompose lambdas]
  Sentry : bool =ν ∀m6.∀n7.(F :int -> int -> bool) n7 m6
  F : int -> int -> bool =μ
    λa9:int.λb10:int.(G :int -> int -> bool) a9 b10 || (F :int -> int -> bool) (a9 + 2) (b10 + 1)
  G : int -> int -> bool =ν
    λa11:int.λb12:int.a11 > b12 && (G :int -> int -> bool) (a11 + 2) (b12 + 1)
get_recurring_predicates
F, G, 
[Solver:App:encode_body_exists_formula (ORIGINAL)]
  ∀m6.∀n7.(F :int -> int -> bool) n7 m6
[Solver:App:encode_body_exists_formula]
  ∀m6.∀n7.(F :int -> int -> bool) n7 m6
[Solver:App:!new_rules]
  
[Solver:App:encode_body_exists_formula (ORIGINAL)]
  λa9:int.λb10:int.(G :int -> int -> bool) a9 b10 || (F :int -> int -> bool) (a9 + 2) (b10 + 1)
[Solver:App:encode_body_exists_formula]
  λa9:int.λb10:int.(G :int -> int -> bool) a9 b10 || (F :int -> int -> bool) (a9 + 2) (b10 + 1)
[Solver:App:!new_rules]
  
[Solver:App:encode_body_exists_formula (ORIGINAL)]
  λa11:int.λb12:int.a11 > b12 && (G :int -> int -> bool) (a11 + 2) (b12 + 1)
[Solver:App:encode_body_exists_formula]
  λa11:int.λb12:int.a11 > b12 && (G :int -> int -> bool) (a11 + 2) (b12 + 1)
[Solver:App:!new_rules]
  
Not decomposed HES path (Exists): /tmp/nuonly-104392196.smt2
[Solver:App:FIRST]
  Sentry : bool =ν ∀m6.∀n7.(F :int -> int -> bool) n7 m6
  F : int -> int -> bool =μ
    λa9:int.λb10:int.(G :int -> int -> bool) a9 b10 || (F :int -> int -> bool) (a9 + 2) (b10 + 1)
  G : int -> int -> bool =ν
    λa11:int.λb12:int.a11 > b12 && (G :int -> int -> bool) (a11 + 2) (b12 + 1)
Not checked HES path: /tmp/nuonly-48352387.smt2
[Solver:App:nu_level]
  G : int -> int -> bool =ν
    λa11:int.λb12:int.a11 > b12 && (G :int -> int -> bool) (a11 + 2) (b12 + 1)
[Solver:App:mu_level]
  F : int -> int -> bool =μ
    λa9:int.λb10:int.(G :int -> int -> bool) a9 b10 || (F :int -> int -> bool) (a9 + 2) (b10 + 1)
[Solver:App:rem_level]
  Sentry : bool =ν ∀m6.∀n7.(F :int -> int -> bool) n7 m6
gen name: rec_F, id: 13
gen name: rec_G, id: 14
gen name: forall_y, id: 15
gen name: a, id: 16
gen name: b, id: 17
[Solver:App:nu_level]
  G : int -> int -> int -> bool =ν
    λrec_G14:int.
     λa11:int.λb12:int.a11 > b12 && (G :int -> int -> int -> bool) rec_G14 (a11 + 2) (b12 + 1)
  F : int -> int -> int -> bool =ν
    λrec_F13:int.
     λa9:int.
      λb10:int.
       rec_F13 >= 0
       && ((G :int -> int -> int -> bool) rec_F13 a9 b10
           || (F :int -> int -> int -> bool) (rec_F13 - 1) (a9 + 2) (b10 + 1))
  Sentry : bool =ν
    ∀m6.
     ∀n7.
      (∀forall_y15.
        λa16:int.
         λb17:int.
          forall_y15 < 1 * n7 + 1 * m6 + 10 || forall_y15 < 1 * n7 + -1 * m6 + 10
          || forall_y15 < -1 * n7 + 1 * m6 + 10
          || forall_y15 < -1 * n7 + -1 * m6 + 10
          || (F :int -> int -> int -> bool) forall_y15 a16 b17)
       n7 m6
[Solver:App:mu_level]
  
[Solver:App:rem_level]
  
Not decomposed HES path: /tmp/nuonly-111652716.smt2
extract_abstraction
a16
b17
not_apply
forall_y15;Sentry8;Sentry8;F2;G5;freevars
n7;m6;gen name: Sentry_sub18, id: 19
NEW_RULE
Sentry_sub18 : int -> int -> int -> int -> bool =ν
  λn7:int.
   λm6:int.
    λa16:int.
     λb17:int.
      forall_y15 < 1 * n7 + 1 * m6 + 10 || forall_y15 < 1 * n7 + -1 * m6 + 10
      || forall_y15 < -1 * n7 + 1 * m6 + 10
      || forall_y15 < -1 * n7 + -1 * m6 + 10
      || (F :int -> int -> int -> bool) forall_y15 a16 b17
[Solver:App:FINAL]
  Sentry : bool =ν ∀m6.∀n7.(Sentry_sub18 :int -> int -> int -> int -> bool) n7 m6 n7 m6
  Sentry_sub18 : int -> int -> int -> int -> bool =ν
    λn7:int.
     λm6:int.
      λa16:int.
       λb17:int.
        ∀forall_y15.
         forall_y15 < 1 * n7 + 1 * m6 + 10 || forall_y15 < 1 * n7 + -1 * m6 + 10
         || forall_y15 < -1 * n7 + 1 * m6 + 10
         || forall_y15 < -1 * n7 + -1 * m6 + 10
         || (F :int -> int -> int -> bool) forall_y15 a16 b17
  F : int -> int -> int -> bool =ν
    λrec_F13:int.
     λa9:int.
      λb10:int.
       rec_F13 >= 0
       && ((G :int -> int -> int -> bool) rec_F13 a9 b10
           || (F :int -> int -> int -> bool) (rec_F13 - 1) (a9 + 2) (b10 + 1))
  G : int -> int -> int -> bool =ν
    λrec_G14:int.
     λa11:int.λb12:int.a11 > b12 && (G :int -> int -> int -> bool) rec_G14 (a11 + 2) (b12 + 1)
Not checked HES path: /tmp/nuonly-90935655.smt2
[Main:App:Input]
  Sentry : bool =ν ∀m64:int.∀n75:int.Sentry_sub18 n75 m64 n75 m64
  Sentry_sub18 : int -> int -> int -> int -> bool =ν
    λn76:int.
     λm67:int.
      λa168:int.
       λb179:int.
        ∀forall_y1510:int.
         forall_y1510 < 1 * n76 + 1 * m67 + 10
         || forall_y1510 < 1 * n76 + -1 * m67 + 10
            || forall_y1510 < -1 * n76 + 1 * m67 + 10
               || forall_y1510 < -1 * n76 + -1 * m67 + 10 || F forall_y1510 a168 b179
  F : int -> int -> int -> bool =ν
    λrec_F1311:int.
     λa912:int.
      λb1013:int.
       rec_F1311 >= 0 && (G rec_F1311 a912 b1013 || F (rec_F1311 - 1) (a912 + 2) (b1013 + 1))
  G : int -> int -> int -> bool =ν
    λrec_G1414:int.λa1115:int.λb1216:int.a1115 > b1216 && G rec_G1414 (a1115 + 2) (b1216 + 1)
[Main:App:Simplified]
  Sentry : bool =ν
    ∀m64:int.
     ∀n75:int.
      ∀forall_y1510:int.
       forall_y1510 < 1 * n75 + 1 * m64 + 10
       || forall_y1510 < 1 * n75 + -1 * m64 + 10
          || forall_y1510 < -1 * n75 + 1 * m64 + 10
             || forall_y1510 < -1 * n75 + -1 * m64 + 10 || F forall_y1510 n75 m64
  F : int -> int -> int -> bool =ν
    λrec_F1311:int.
     λa912:int.
      λb1013:int.
       rec_F1311 >= 0 && (G rec_F1311 a912 b1013 || F (rec_F1311 - 1) (a912 + 2) (b1013 + 1))
  G : int -> int -> int -> bool =ν
    λrec_G1414:int.λa1115:int.λb1216:int.a1115 > b1216 && G rec_G1414 (a1115 + 2) (b1216 + 1)
Sentry *[X21()]
F (int(rec_F1328) -> (int(a929) -> (int(b1030) -> *[X8(b1030,a929,rec_F1328)])))
G (int(rec_G1437) -> (int(a1138) -> (int(b1239) -> *[X1(b1239,a1138,rec_G1437)])))


infering new formula: Sentry = (∀int(m64).(∀int(n75).(∀int(forall_y1510).(forall_y1510<1 * n75 + 1 * m64 + 10 || (forall_y1510<1 * n75 + -1 * m64 + 10 || (forall_y1510<-1 * n75 + 1 * m64 + 10 || (forall_y1510<-1 * n75 + -1 * m64 + 10 || (((F forall_y1510) n75) m64))))))))
[Result]
X21() => X22(m64)
X22(m64) => X23(n75,m64)
X23(n75,m64) => X24(forall_y1510,n75,m64)
X24(forall_y1510,n75,m64) => (forall_y1510<1 * n75 + 1 * m64 + 10 \/ (forall_y1510<1 * n75 + -1 * m64 + 10 \/ (forall_y1510<-1 * n75 + 1 * m64 + 10 \/ (forall_y1510<-1 * n75 + -1 * m64 + 10 \/ X8(m64,n75,forall_y1510)))))
tt => X21()


infering new formula: F = (\int(rec_F1311).(\int(a912).(\int(b1013).(rec_F1311>=0:X9(b1013,a912,rec_F1311) && ((((G rec_F1311) a912) b1013) || (((F rec_F1311 - 1) a912 + 2) b1013 + 1)):X10(b1013,a912,rec_F1311)))))
[Result]
X8(x45,x44,x43) => (x43>=0 /\ (X1(x45,x44,x43) \/ X8(x45 + 1,x44 + 2,x43 - 1)))
X21() => X22(m64)
X22(m64) => X23(n75,m64)
X23(n75,m64) => X24(forall_y1510,n75,m64)
X24(forall_y1510,n75,m64) => (forall_y1510<1 * n75 + 1 * m64 + 10 \/ (forall_y1510<1 * n75 + -1 * m64 + 10 \/ (forall_y1510<-1 * n75 + 1 * m64 + 10 \/ (forall_y1510<-1 * n75 + -1 * m64 + 10 \/ X8(m64,n75,forall_y1510)))))
tt => X21()


infering new formula: G = (\int(rec_G1414).(\int(a1115).(\int(b1216).(a1115>b1216:X2(b1216,a1115,rec_G1414) && (((G rec_G1414) a1115 + 2) b1216 + 1):X3(b1216,a1115,rec_G1414)))))
[Result]
X1(x48,x47,x46) => (x47>x48 /\ X1(x48 + 1,x47 + 2,x46))
X8(x45,x44,x43) => (x43>=0 /\ (X1(x45,x44,x43) \/ X8(x45 + 1,x44 + 2,x43 - 1)))
X21() => X22(m64)
X22(m64) => X23(n75,m64)
X23(n75,m64) => X24(forall_y1510,n75,m64)
X24(forall_y1510,n75,m64) => (forall_y1510<1 * n75 + 1 * m64 + 10 \/ (forall_y1510<1 * n75 + -1 * m64 + 10 \/ (forall_y1510<-1 * n75 + 1 * m64 + 10 \/ (forall_y1510<-1 * n75 + -1 * m64 + 10 \/ X8(m64,n75,forall_y1510)))))
tt => X21()
[Size] 2
[Dual Size] 1
remove or or
x47<=x48 => X1(x48,x47,x46)
X1(x48 + 1,x47 + 2,x46) => X1(x48,x47,x46)
x43<0 => X8(x45,x44,x43)
(X1(x45,x44,x43) /\ X8(x45 + 1,x44 + 2,x43 - 1)) => X8(x45,x44,x43)
X22(m64) => X21()
X23(n75,m64) => X22(m64)
X24(forall_y1510,n75,m64) => X23(n75,m64)
(forall_y1510>=1 * n75 + 1 * m64 + 10 /\ (forall_y1510>=1 * n75 + -1 * m64 + 10 /\ (forall_y1510>=-1 * n75 + 1 * m64 + 10 /\ (forall_y1510>=-1 * n75 + -1 * m64 + 10 /\ X8(m64,n75,forall_y1510))))) => X24(forall_y1510,n75,m64)
X21() => ff
Run command: "/opt/home2/git/fptprove/hflmc3.sh /tmp/fptprove-110363724.smt2"
OK!!!
/tmp/fptprove-110363724.smt2,sat,1.714366614,7
Process result:
out: OK!!!
/tmp/fptprove-110363724.smt2,sat,1.714366614,7
status: Ok
err:


Profiling:
  CHC Solver: 2.117900 sec
did not calculate refinement. Use --show-refinement
Verification Result:
  Valid
Profiling:
  total: 2.120976 sec
Process result:
out: [Main:App:Input]
  Sentry : bool =ν ∀m64:int.∀n75:int.Sentry_sub18 n75 m64 n75 m64
  Sentry_sub18 : int -> int -> int -> int -> bool =ν
    λn76:int.
     λm67:int.
      λa168:int.
       λb179:int.
        ∀forall_y1510:int.
         forall_y1510 < 1 * n76 + 1 * m67 + 10
         || forall_y1510 < 1 * n76 + -1 * m67 + 10
            || forall_y1510 < -1 * n76 + 1 * m67 + 10
               || forall_y1510 < -1 * n76 + -1 * m67 + 10 || F forall_y1510 a168 b179
  F : int -> int -> int -> bool =ν
    λrec_F1311:int.
     λa912:int.
      λb1013:int.
       rec_F1311 >= 0 && (G rec_F1311 a912 b1013 || F (rec_F1311 - 1) (a912 + 2) (b1013 + 1))
  G : int -> int -> int -> bool =ν
    λrec_G1414:int.λa1115:int.λb1216:int.a1115 > b1216 && G rec_G1414 (a1115 + 2) (b1216 + 1)
[Main:App:Simplified]
  Sentry : bool =ν
    ∀m64:int.
     ∀n75:int.
      ∀forall_y1510:int.
       forall_y1510 < 1 * n75 + 1 * m64 + 10
       || forall_y1510 < 1 * n75 + -1 * m64 + 10
          || forall_y1510 < -1 * n75 + 1 * m64 + 10
             || forall_y1510 < -1 * n75 + -1 * m64 + 10 || F forall_y1510 n75 m64
  F : int -> int -> int -> bool =ν
    λrec_F1311:int.
     λa912:int.
      λb1013:int.
       rec_F1311 >= 0 && (G rec_F1311 a912 b1013 || F (rec_F1311 - 1) (a912 + 2) (b1013 + 1))
  G : int -> int -> int -> bool =ν
    λrec_G1414:int.λa1115:int.λb1216:int.a1115 > b1216 && G rec_G1414 (a1115 + 2) (b1216 + 1)
Sentry *[X21()]
F (int(rec_F1328) -> (int(a929) -> (int(b1030) -> *[X8(b1030,a929,rec_F1328)])))
G (int(rec_G1437) -> (int(a1138) -> (int(b1239) -> *[X1(b1239,a1138,rec_G1437)])))


infering new formula: Sentry = (∀int(m64).(∀int(n75).(∀int(forall_y1510).(forall_y1510<1 * n75 + 1 * m64 + 10 || (forall_y1510<1 * n75 + -1 * m64 + 10 || (forall_y1510<-1 * n75 + 1 * m64 + 10 || (forall_y1510<-1 * n75 + -1 * m64 + 10 || (((F forall_y1510) n75) m64))))))))
[Result]
X21() => X22(m64)
X22(m64) => X23(n75,m64)
X23(n75,m64) => X24(forall_y1510,n75,m64)
X24(forall_y1510,n75,m64) => (forall_y1510<1 * n75 + 1 * m64 + 10 \/ (forall_y1510<1 * n75 + -1 * m64 + 10 \/ (forall_y1510<-1 * n75 + 1 * m64 + 10 \/ (forall_y1510<-1 * n75 + -1 * m64 + 10 \/ X8(m64,n75,forall_y1510)))))
tt => X21()


infering new formula: F = (\int(rec_F1311).(\int(a912).(\int(b1013).(rec_F1311>=0:X9(b1013,a912,rec_F1311) && ((((G rec_F1311) a912) b1013) || (((F rec_F1311 - 1) a912 + 2) b1013 + 1)):X10(b1013,a912,rec_F1311)))))
[Result]
X8(x45,x44,x43) => (x43>=0 /\ (X1(x45,x44,x43) \/ X8(x45 + 1,x44 + 2,x43 - 1)))
X21() => X22(m64)
X22(m64) => X23(n75,m64)
X23(n75,m64) => X24(forall_y1510,n75,m64)
X24(forall_y1510,n75,m64) => (forall_y1510<1 * n75 + 1 * m64 + 10 \/ (forall_y1510<1 * n75 + -1 * m64 + 10 \/ (forall_y1510<-1 * n75 + 1 * m64 + 10 \/ (forall_y1510<-1 * n75 + -1 * m64 + 10 \/ X8(m64,n75,forall_y1510)))))
tt => X21()


infering new formula: G = (\int(rec_G1414).(\int(a1115).(\int(b1216).(a1115>b1216:X2(b1216,a1115,rec_G1414) && (((G rec_G1414) a1115 + 2) b1216 + 1):X3(b1216,a1115,rec_G1414)))))
[Result]
X1(x48,x47,x46) => (x47>x48 /\ X1(x48 + 1,x47 + 2,x46))
X8(x45,x44,x43) => (x43>=0 /\ (X1(x45,x44,x43) \/ X8(x45 + 1,x44 + 2,x43 - 1)))
X21() => X22(m64)
X22(m64) => X23(n75,m64)
X23(n75,m64) => X24(forall_y1510,n75,m64)
X24(forall_y1510,n75,m64) => (forall_y1510<1 * n75 + 1 * m64 + 10 \/ (forall_y1510<1 * n75 + -1 * m64 + 10 \/ (forall_y1510<-1 * n75 + 1 * m64 + 10 \/ (forall_y1510<-1 * n75 + -1 * m64 + 10 \/ X8(m64,n75,forall_y1510)))))
tt => X21()
[Size] 2
[Dual Size] 1
remove or or
x47<=x48 => X1(x48,x47,x46)
X1(x48 + 1,x47 + 2,x46) => X1(x48,x47,x46)
x43<0 => X8(x45,x44,x43)
(X1(x45,x44,x43) /\ X8(x45 + 1,x44 + 2,x43 - 1)) => X8(x45,x44,x43)
X22(m64) => X21()
X23(n75,m64) => X22(m64)
X24(forall_y1510,n75,m64) => X23(n75,m64)
(forall_y1510>=1 * n75 + 1 * m64 + 10 /\ (forall_y1510>=1 * n75 + -1 * m64 + 10 /\ (forall_y1510>=-1 * n75 + 1 * m64 + 10 /\ (forall_y1510>=-1 * n75 + -1 * m64 + 10 /\ X8(m64,n75,forall_y1510))))) => X24(forall_y1510,n75,m64)
X21() => ff
Run command: "/opt/home2/git/fptprove/hflmc3.sh /tmp/fptprove-110363724.smt2"
OK!!!
/tmp/fptprove-110363724.smt2,sat,1.714366614,7
Process result:
out: OK!!!
/tmp/fptprove-110363724.smt2,sat,1.714366614,7
status: Ok
err:


Profiling:
  CHC Solver: 2.117900 sec
did not calculate refinement. Use --show-refinement
Verification Result:
  Valid
Profiling:
  total: 2.120976 sec
status: Ok
err:


PARSED STATUS: valid

[[MAIN]] Verification Result:
  valid
Profiling:
  total: 2.137556 sec
