/* ackermannのlexicographic orderingで述語のdisjunctionを無くして解けるようにしたもの */
/* たぶん合っている */
%HES
Sentry =v
  ∀n. ∀m.
    ∀r1. ∀r2.
      r1 < 1 + n \/
      r1 < 1 - n \/
      r1 < 1 + m \/
      r1 < 1 - m \/
      r1 < 1 \/
      r2 < 1 + n \/
      r2 < 1 - n \/
      r2 < 1 + m \/
      r2 < 1 - m \/
      r2 < 1 \/
      Loop r1 r2 m n (\_. true).

Loop r1 r2 m n k =v
  r1 > 0 /\
  r2 > 0 /\
  
  (m <= 0 => k (n + 1)) /\
  
  /*
  /* m <= 0のときでもさらに再帰をするパターン。無限再帰になるので、invalidになる */
  (m <= 0 => (∀r1n. ∀r2n. (
      (r1 - 1 > 0  /\ r1n >= r1 - 1 /\ r2n >= r2) \/
      (r1 - 1 <= 0 /\ (r1n >= 1 + n /\ r1n >= 1 - n /\ r1n >= 1 + m /\ r1n >= 1) /\ r2n >= r2 - 1)
    ) => 
    Loop r1n r2n m n k)
  ) /\ */
  
  
  ((m > 0 /\ n <= 0) => (
    ∀r1n. ∀r2n. (
      (r1 - 1 > 0  /\ r1n >= r1 - 1 /\ r2n >= r2) \/
      (r1 - 1 <= 0 /\ (r1n >= 1 - n /\ r1n >= 1 + m /\ r1n >= 1) /\ r2n >= r2 - 1)
    ) => 
    Loop r1n r2n (m - 1) n k)
  ) /\
  ((m > 0 /\ n > 0) => (
    ∀r1n. ∀r2n. (
        (r1 - 1 > 0  /\ r1n >= r1 - 1 /\ r2n >= r2) \/
        (r1 - 1 <= 0 /\ (r1n >= 1 + n /\ r1n >= 1 + m /\ r1n >= 1) /\ r2n >= r2 - 1)
      ) => 
      Loop r1n r2n m (n - 1) (\r.
        ∀r1np. ∀r2np. (
          (r1 - 1 > 0  /\ r1np >= r1 - 1 /\ r2np >= r2) \/
          (r1 - 1 <= 0 /\ (r1np >= 1 + n /\ r1np >= 1 + m /\ r1np >= 1 + r /\ r1np >= 1 - r /\ r1np >= 1) /\ r2np >= r2 - 1)
        ) => 
        Loop r1np r2np (m - 1) r k
      )
    )
  )
.






/*(r1n >= r1 - 1 /\
  r2n >= r2 - 1)
  =>

  ((r1 - 1 >=  0 => (r1n >= r1 - 1 /\ r2n >= r2)) /\
    (r1 - 1 < 0 => (
      (
        r1n >= 1 + 1 * n /\
        r1n >= 1 + -1 * n /\
        r1n >= 1 + 1 * m /\
        r1n >= 1 + -1 * m /\
        r1n >= 1
      )
      /\ r2n >= r2 - 1))) */