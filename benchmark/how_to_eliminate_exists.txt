(declare-const v_0 Int)
(declare-const v_1 Int)
(declare-const v_2 Int)
;(declare-const v_3 Int)
;(declare-const v_4 Int)
(declare-const v_5 Int)
(declare-const v_6 Int)


;(define-fun X85((v_0 Int)(v_1 Int)(v_2 Int))Bool(or(and(<= v_1 0)(>=(+ v_2 v_1)1))
;  (exists((v_4 Int)(v_3 Int))(and(>= v_1 1)(>=(+ v_4(*(- 1)v_3))1)(>=(+ v_4(*(- 1)v_1))0)(>=(+ v_4 v_3)1)(>= v_4 1)(>=(+ v_2 v_1)1)(>=(+ v_2(*(- 1)v_1))1)(or(and(>= v_4 1)(>=(+ v_1(- 1))0)(= 0 0)(= 0 0)(>=(+ v_4(*(- 1)(+ v_1(- 1))))1)(>=(+ v_2(*(- 1)(+ v_1(- 1)))(* 0(- 1))(* 0(- 1)))2))(and(>=(+ v_1(- 1))0)(>= 0 0)(>= 0 0)(>=(+ v_4(*(- 1)(+ v_1(- 1))))1)(>=(+ v_2(*(- 1)(+ v_1(- 1)))(*(- 1)0)(*(- 1)0))2)))true))))

; これはtrue
(assert (forall((v_1 Int))
  (exists((v_4 Int)(v_3 Int))
    (and
      (>=(+ v_4(*(- 1)v_3))1)
      (>=(+ v_4(*(- 1)v_1))0)
      (>=(+ v_4 v_3)1)
      (>= v_4 1)
      (>=(+ v_4(*(- 1)(+ v_1(- 1))))1)
    )
  )
))

; 元の式
;(define-fun X85((v_0 Int)(v_1 Int)(v_2 Int))Bool(or(and(<= v_1 0)(>=(+ v_2 v_1)1))(exists((v_4 Int)(v_3 Int))(and(>= v_1 1)(>=(+ v_4(*(- 1)v_3))1)(>=(+ v_4(*(- 1)v_1))0)(>=(+ v_4 v_3)1)(>= v_4 1)(>=(+ v_2 v_1)1)(>=(+ v_2(*(- 1)v_1))1)(or(and(>= v_4 1)(>=(+ v_1(- 1))0)(= 0 0)(= 0 0)(>=(+ v_4(*(- 1)(+ v_1(- 1))))1)(>=(+ v_2(*(- 1)(+ v_1(- 1)))(* 0(- 1))(* 0(- 1)))2))(and(>=(+ v_1(- 1))0)(>= 0 0)(>= 0 0)(>=(+ v_4(*(- 1)(+ v_1(- 1))))1)(>=(+ v_2(*(- 1)(+ v_1(- 1)))(*(- 1)0)(*(- 1)0))2)))true))))
; 変数の使用を局所化することで、うまくexistsを消せた例

;(assert 
;  ;(forall((v_1 Int))
;  ;  (exists((v_0 Int)(v_2 Int)(v_5 Int)(v_6 Int))
;      (and
;        (exists((v_4 Int)(v_3 Int))
;          (and
;            (>=(+ v_4(*(- 1)v_3))1)
;            (>=(+ v_4(*(- 1)v_1))0)
;            (>=(+ v_4 v_3)1)
;            (>= v_4 1)
;            (>=(+ v_4(*(- 1)(+ v_1(- 1))))1)
;          )
;        )
;        (and
;          (>= v_1 1)
;          (>=(+ v_2 v_1)1)
;          (>=(+ v_2(*(- 1)v_1))1)
;          (>=(+ v_1(- 1))0)
;          (>=(+ v_2(*(- 1)(+ v_1(- 1))))2)
;        )
;      )
;  ;)
;  ;)
;)
(apply ctx-solver-simplify)
(check-sat)
(get-model)