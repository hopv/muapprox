/* Taken from 
   Koskinen and Terauchi, "Local Temporal Reasoning", CSL-LICS 2014, Figure 10 */
/* if * でdisjunctionが発生している。 */
/* 解くときに --instantiate-exists で解ける */

/*
## オートマトンが表す性質
printが出現した後、print, rumbleが無限に出現
## プログラムの性質
常にprintの無限再帰になる

Trace /\ L != \emptyset
<=> invalid
*/

%PROGRAM
let print x =
  event print; print x

let rumble x y k =
  event rumble;
  if x < y then (
    if * then
      rumble (x+1) y k
    else rumble x (y-1) k
  ) else k x

let () =
  let a = * in
  let b = * in
  rumble b a (\r. rumble a r (\r2. print r2))

%TRANSITION
q0 rumble -> q0
q0 print -> q0
q0 print -> q1

q1 rumble -> q1
q1 print -> q1


%PRIORITY
q0 -> 1
q1 -> 2