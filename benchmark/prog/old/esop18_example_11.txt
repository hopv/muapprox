/* valid */
%PROGRAM
let g k = if * then (event a; k) else (event b; k)
let f x = if x > 0 then g (f (x - 1)) else (event b; f 5)
let () = f 5

/* %ENV
g : ((qa, 0) /\ (qb, 1) -> qa, 0)
g : ((qa, 0) /\ (qb, 1) -> qb, 0)
f : (int -> qa, 0)
f : (int -> qb, 1)
*/

/* A_{ab} = \complement{(a*b)^{\omega}} = (a*b)*a^{\omega} */
%TRANSITION
qa a -> qa
qa b -> qb

qb a -> qa
qb b -> qb

%PRIORITY
qa -> 0
qb -> 1

/*
## プログラムの性質
bは、必ず無限回現れる
aは、無限回現れることも現れないこともある

## オートマトンが表す言語の性質
L = 「bが有限回のみ現れる」言語

## よって
Trace /\ L = emptyset
=> 結果のHFLはvalid
*/
