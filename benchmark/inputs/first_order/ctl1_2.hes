/*
forall n, m.
    for all timing, A and B occurs in the future
    iff m > 0

  let f x y =
    if x > 0 then
      A; f (x - y) y
    else
      B; f (x + y) y
*/
/*
  forall n, m. m > 0 <=> F n m
  s.t.
  F x y =nu A x y /\ B x y /\ (x > 0 => F (x - y) y) /\ (x <= 0 => F (x + y) y);
  A x y =mu x <= 0 => A (x + y) y;
  B x y =mu x > 0 => B (x - y) y;
*/

forall (x : int). F2 x x
s.t.
F2 (x: int) (y : int): bool =nu exists (m : int) (n : int). (m <= 0 /\ F (n + m) (x + y));
F  (n : int) (x : int) : bool =nu n <= 0 /\ F2 (n + x) n;