/*
Taken from
Koskinen and Terauchi, "Local Temporal Reasoning", CSL-LICS 2014

Program:

let rec done () = Done; done ()
let reduce x = if x <= 0 then x else x - 2
le rec explore x =
  Explore;
  let y = reduce x in
  if y <= 0 then done ()
  else explore y
let main () = let t = * in explore t

Spec \phi: F Done

Buchi automaton \neg \phi:
Explore^omega

q0 Explore -> q0

q0 in F
*/

%HES
Sentry =v ∃t7. Explore_0_ff t7.
Explore_0_tt x8 =v ∃y9. Reduce_0_ff_0 x8 y9 /\ y9 > 0 /\ Explore_0_tt y9.
Explore_0_ff x10 =u
  ∃y11. Reduce_0_ff_0 x10 y11 /\ y11 > 0 /\ Explore_0_tt y11.
Reduce_0_ff_0 x12 r13 =u x12 <= 0 /\ r13 = x12 \/ x12 > 0 /\ r13 = x12 - 2.