/* intをdemonic non-determinismで、体系的なエンコーディングをしたもの */
%RANK
c -> 1.
d -> 2.
d2 -> 2.

%GRAMMAR
/* 3 should be an arbitary integer */
/* S -> Input 1 (G 3). /* valid */ */
S -> Input 0 (G 3). /* invalid */
Repeat f x -> if x <= 0 then Fin else
          d (f x (Repeat f)) (Repeat f (x - 1)).
Fin -> c Fin.
Sub x y k -> k (y - x).
G z x -> Repeat (Sub x) z.
Input x k -> d2 (k x) (Input (x + 1) k).

%TRANSITION
q0 d  -> (1, q0) /\ (2, q0).
q0 d2 -> (1, q0) /\ (2, q1).
q0 c -> true.

q1 d -> false.
q1 d2 -> (1, q0) /\ (2, q1).
q1 c -> false.

%PRIORITY
q0 -> 1.
q1 -> 2.

/*
app int  /  ifのpred

*が複数あった場合 -> その分だけinputをつくる

if phi(*, *) then ... else ...
(input 0) (\x1. input 0 (\x2. if phi (x1, x2)))

if phi(*) then ... else ...

...

... input 0 (\x. if phi(x) then ... else ...) ...
let input x k = d2 (k x) (Input (x + 1) k) (Input (x - 1) k) (* HORS *)

...

... input 0 (expr01 x~) ...
let expr01 x~ x = if phi(x) then ... else ...
let input x k = d2 (k x) (Input (x + 1) k) (Input (x - 1) k) (* HORS *)


free variableを入れて、展開
プログラムにおける変形なのでいけるはず。。



*
-> 
let a = input 0 in
input x k -> d2 (k x) (Input (x + 1) k) (Input (x - 1) k)

*/