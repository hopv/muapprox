%PROGRAM
/* まだ解けていない */
/* invalidなのはおかしいはず */
let const x k = event called; k x

let finish k = event called; event a; finish k

let f g k =
  event called;
  g (\fn.
    check fn (\b.
      if b = 1 then
        pred fn (\fn_. f (const fn_) k)
      else finish k
    )
  )

let xx g k =
  event inf_called;
  if <d> * then
    f g k
  else
    xx g k

let check f_ k =
  event inf_called;
  if <d> * then
    if f_ > 0 then k 1 else k 0
  else check f_ k

let pred f_ k =
  k (f_ - 1)

let () =
  let n = <_forall> * in
  xx (const n) (\. ())


%TRANSITION
qa a -> (1, qa).
qa called -> (1, q_called).
qa inf_called -> (1, q_ic).
qa nullary -> true.
qa d -> (1, qa) /\ (2, qa).

q_called a -> (1, qa).
q_called called -> (1, q_called).
q_called inf_called -> (1, q_ic).
q_called nullary -> true.
q_called d -> (1, q_called) /\ (2, q_called).

q_ic a -> (1, qa).
q_ic called -> (1, q_called).
q_ic inf_called -> (1, q_ic).
q_ic nullary -> true.
q_ic d -> (1, q_ic) /\ (2, q_ic).

%PRIORITY
q_ic -> 0.
q_called -> 1.
qa -> 2.


/*
/* --coe=1,2 --coe-arg=2,1 */
%HES
Sentry =v
  ∀x. 
   (∀recF61__q_called. 
     recF61__q_called < 2 + 1 * x \/ recF61__q_called < 2 + (-1) * x
     \/ recF61__q_called < 2
     \/ F__q_ic recF61__q_called (Const__q_called x))
   /\ (∀s. 
        s < 2 * x + 1 \/ s < (-2) * x + 1 \/ s < 1
        \/ Xx__q_ic s (Const__q_called x)).
Const__q_called x k__q_called =v k__q_called x.
F61__q_called recF61__q_called fn =v
  recF61__q_called > 0
  /\ (fn <= 0 \/ F__q_ic recF61__q_called (Const__q_called (fn - 1)))
     /\ Check__q_ic fn
         (\b. b != 1 \/ F__q_ic recF61__q_called (Const__q_called (fn - 1))).
F__q_ic recF61__q_called g__q_called =v
  g__q_called (F61__q_called (recF61__q_called - 1)).
Xx__q_ic t g__q_called =v
  (∀recF61__q_called. 
    recF61__q_called < 2 + 1 * t \/ recF61__q_called < 2 + (-1) * t
    \/ recF61__q_called < 2
    \/ F__q_ic recF61__q_called g__q_called)
  /\ (∀s. 
       s < 2 * t + 1 \/ s < (-2) * t + 1 \/ s < 1 \/ Xx__q_ic s g__q_called).
Check__q_ic f k__q_ic =v
  (f <= 0 \/ k__q_ic 1) /\ (f > 0 \/ k__q_ic 0) /\ Check__q_ic f k__q_ic.
*/
