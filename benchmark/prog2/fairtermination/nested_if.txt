/* invalid */
%PROGRAM

let ev_a k = event called; event a; k
let ev_b k = event called; event b; k

let f ev k =
  event called;
  ev (\.
    let x = <_forall> * in
    let y = <_forall> * in
    if x < y then
      if x > y + 1 then
        k
      else
        f ev_b k
    else
      f ev_a k
  )

let () =
  f ev_a (\. ())

%TRANSITION
qa a -> (1, qa).
qa b -> (1, qb).
qa called -> (1, q_called).
qa nullary -> true.

qb a -> (1, qa).
qb b -> (1, qb).
qb called -> (1, q_called).
qb nullary -> true.

q_called a -> (1, qa).
q_called b -> (1, qb).
q_called called -> (1, q_called).
q_called nullary -> true.

%PRIORITY
q_called -> 1.
qa -> 2.
qb -> 3.

/* nested_if.in */
/*
/* simplified form (timeout) */
%HES
Sentry =v F__qa__0 Ev_a__q_called__1.

F24__qb__3 =u
  ∀x1158. 
   ∀x1179. 
       (x1158 >= x1179 \/ ((x1158 <= x1179 + 1 \/ true) /\ (x1158 > x1179 + 1 \/ F24__qb__3)))
    /\ (x1158 < x1179  \/ F24__qa__2).

F24__qa__2 =v
  ∀x1163. 
   ∀x1178. 
       (x1163 >= x1178 \/ ((x1163 <= x1178 + 1 \/ true) /\ (x1163 > x1178 + 1 \/ F__qa__0 Ev_b__q_called__1)))
    /\ (x1163 < x1178 \/ F__qa__0 Ev_a__q_called__1).

Ev_a__q_called__1 k__qa__2 k__qb__3 =u k__qa__2.

Ev_b__q_called__1 k__qa__2 k__qb__3 =u k__qb__3.

F__qa__0 ev__q_called__1 =v
  ev__q_called__1 F24__qa__2 F24__qb__3.
*/

/*
/* simpler form */
/* invalid (solved in disprover-3)
%HES
Sentry =v F__qa__0 Ev_a__q_called__1.

F24__qb__3 =u
  ∀x1158. 
       (x1158 = 0  \/ F24__qb__3)
    /\ (x1158 != 0 \/ F24__qa__2).

F24__qa__2 =v
  ∀x1163. 
       (x1163 =  0 \/ F__qa__0 Ev_b__q_called__1)
    /\ (x1163 != 0 \/ F__qa__0 Ev_a__q_called__1).

Ev_a__q_called__1 k__qa__2 k__qb__3 =u k__qa__2.

Ev_b__q_called__1 k__qa__2 k__qb__3 =u k__qb__3.

F__qa__0 ev__q_called__1 =v
  ev__q_called__1 F24__qa__2 F24__qb__3.
*/
