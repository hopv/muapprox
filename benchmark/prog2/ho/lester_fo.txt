/* Taken from
   Lester, Neatherway, Ong, and Ramsay,
   "Model Checking Liveness Properties of Higher-Order Functional Programs",
   Appendix H.1
 */
/* valid */
%PROGRAM
let loop i y n k =
  if i < n then (
    event write;
    loop (i + 1) y n k
  ) else y k

let g y n k = loop 0 y n k
  
let f x y n k =
  if <d> * then (
    event read;
    f x y (n+1) k
  ) else (
    x (\. g y n k)
  )

let xx x y n k =
  event inf_called;
  if <d> * then
    f x y n k
  else
    xx x y n k

let () =
  let s = (\k. event close_in; k) in
  let t = (\k. event close_out; k) in
  xx s t 0 (\. ())

/* AG (close_in => AF close_out) */
/* branchはdemonic */
/* q0 close_in -> で、この時点よりも後でclose_outされることをチェックするスレッドqfと、この時点より後のclose_inを見ていくq0とに分岐 */
/* ひとたびqfになった後、close_outがやがて呼ばれないければinvalidにしたいので、qfで停止した場合=nullaryはfalse. qfが無限に繰り返す場合はodd priority */
%TRANSITION
q0 d -> (1, q0) /\ (2, q0).
q0 close_in -> (1, qf) /\ (1, q0).
q0 close_out -> (1, q0).
q0 read -> (1, q0).
q0 write -> (1, q0).
q0 nullary -> true.
q0 inf_called -> (1, q_ic).

qf d -> (1, qf) /\ (2, qf).
qf close_in -> (1, qf).
qf close_out -> true.
qf read -> (1, qf).
qf write -> (1, qf).
qf nullary -> false.
qf inf_called -> (1, q_ic).

q_ic d -> (1, q0) /\ (2, q0).
q_ic close_in -> (1, qf) /\ (1, q0).
q_ic close_out -> (1, q0).
q_ic read -> (1, q0).
q_ic write -> (1, q0).
q_ic nullary -> true.
q_ic inf_called -> (1, q_ic).

%PRIORITY
q_ic -> 0.
q0 -> 0.
qf -> 1.

/*
/* --coe=1,1 */
/* valid */
%HES
Sentry =v Xx__q (\k__q. \k__qf. k__qf /\ k__q) (\k__q. k__q) true 0 true.
Loop__qf recLoop__qf i y__qf y__qf2 n =v
  recLoop__qf > 0
  /\ (i >= n \/ Loop__qf (recLoop__qf - 1) (i + 1) y__qf2 y__qf2 n)
     /\ (i < n \/ y__qf).
F73__qf y__qf y__qf2 n =v
  (0 >= n
   \/ (∀recLoop__qf. 
        recLoop__qf < 1 + 1 * n \/ recLoop__qf < 1 + (-1) * n
        \/ recLoop__qf < 1 + 1 * 1
        \/ recLoop__qf < 1 + (-1) * 1
        \/ recLoop__qf < 1
        \/ Loop__qf recLoop__qf 1 y__qf2 y__qf2 n))
  /\ (0 < n \/ y__qf).
Loop__q i y__q n k__q =v
  (i >= n \/ Loop__q (i + 1) y__q n k__q) /\ (i < n \/ y__q k__q).
G__q y__q n k__q =v Loop__q 0 y__q n k__q.
F__q x__q y__q y__qf n k__q =v
  F__q x__q y__q y__qf (n + 1) k__q
  /\ x__q (G__q y__q n k__q) (F73__qf y__qf y__qf n).
Xx__q x__q y__q y__qf n k__q =v
  F__q x__q y__q y__qf n k__q /\ Xx__q x__q y__q y__qf n k__q.
*/
