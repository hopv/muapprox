/* valid */
%PROGRAM
let loop = event called; loop

let finish =
  event called;
  event done;
  loop

let explore x_ r =
  event called;
  event explore;
  reduce x_ r (\y_.
    check y_ (\b.
      if b = 1 then finish
      else explore y_ r
    )
  )

let reduce x_ r k =
  event called;
  check x_ (\b.
    if b = 1 then k x_ else r x_ k
  )

let check x_ k =
  event inf_called;
  if <d> * then
    check x_ k
  else (
    x_ (\x.
      if x<=0 then k 1 else k 0
    )
  )

let xx x_ k = 
  event inf_called;
  if <d> * then
    xx x_ k
  else
    explore x_ k

let () =
  let x = <_forall> * in
  xx (\k. k x) (\x_ k.
    x_ (\x.
      k (\k2. k2 (x - 2))
    )
  )

/* (G((called && NOT done && NOT explore) || (NOT called && done && NOT explore) || (NOT called && NOT done && explore))) && F(done) */
%TRANSITION
q0 called -> (1, q0).
q0 explore -> (1, q0).
q0 done -> (1, q1).
q0 inf_called -> (1, q_ic).
q0 d -> (1, q0) /\ (2, q0).

q1 called -> (1, q1).
q1 explore -> (1, q1).
q1 done -> (1, q1).
q1 inf_called -> (1, q_ic).
q1 d -> (1, q1) /\ (2, q1).

q_ic called -> (1, q0).
q_ic explore -> (1, q0).
q_ic done -> (1, q1).
q_ic inf_called -> (1, q_ic).
q_ic d -> (1, q_ic) /\ (2, q_ic).

%PRIORITY
q_ic -> 0.
q0 -> 1.
q1 -> 2.

/*
/* --coe=1,2 --coe-arg=1,0  +  extra arguments */
/* valid with z3 */
%HES
Sentry =v
  ∀x. 
   (∀s. 
     s < 1 * x + 0 \/ s < (-1) * x + 0 \/ s < 0
     \/ Xx__q_ic x s (\k__q_ic. k__q_ic x)
         (\_x. \x___q_ic. 
           \k__q_ic. 
            x___q_ic
             (\x2. 
               k__q_ic (_x - 2) (\k2__q_ic. k2__q_ic (x2 - 2))
                (\k2__q_ic. k2__q_ic (x2 - 2)))))
   /\ (∀recExplore73__q_ic. 
        recExplore73__q_ic < 2 + 1 * x \/ recExplore73__q_ic < 2 + (-1) * x
        \/ recExplore73__q_ic < 2
        \/ Explore__q_ic recExplore73__q_ic x (\k__q_ic. k__q_ic x)
            (\_x. \x___q_ic. 
              \k__q_ic. 
               x___q_ic
                (\x2. 
                  k__q_ic (_x - 2) (\k2__q_ic. k2__q_ic (x2 - 2))
                   (\k2__q_ic. k2__q_ic (x2 - 2))))).

Explore73__q_ic recExplore73__q_ic _x r__q_ic y___q_ic y___q_ic2 =v
  recExplore73__q_ic > 0
  /\ Check__q_ic _x y___q_ic
      (\b. b = 1 \/ Explore__q_ic recExplore73__q_ic _x y___q_ic2 r__q_ic).

Explore__q_ic recExplore73__q_ic _x x___q_ic r__q_ic =v
  Check__q_ic _x x___q_ic
   (\b. 
     (b != 1
      \/ Explore73__q_ic (recExplore73__q_ic - 1) _x r__q_ic x___q_ic x___q_ic)
     /\ (b = 1
         \/ r__q_ic _x x___q_ic (\__x. Explore73__q_ic (recExplore73__q_ic - 1) __x r__q_ic)))
  /\ x___q_ic
      (\x. 
        (x > 0
         \/ Explore73__q_ic (recExplore73__q_ic - 1) _x r__q_ic x___q_ic x___q_ic)
        /\ (x <= 0
            \/ r__q_ic _x x___q_ic
                (\__x. Explore73__q_ic (recExplore73__q_ic - 1) __x r__q_ic))).

Check__q_ic _x x___q_ic k__q_ic =v
  Check__q_ic _x x___q_ic k__q_ic
  /\ x___q_ic (\x. (x > 0 \/ k__q_ic 1) /\ (x <= 0 \/ k__q_ic 0)).

Xx__q_ic _x t x___q_ic k__q_ic =v
  (∀s. 
    s < 1 * t + 0 \/ s < (-1) * t + 0 \/ s < 0 \/ Xx__q_ic _x s x___q_ic k__q_ic)
  /\ (∀recExplore73__q_ic. 
       recExplore73__q_ic < 2 + 1 * t \/ recExplore73__q_ic < 2 + (-1) * t
       \/ recExplore73__q_ic < 2
       \/ Explore__q_ic recExplore73__q_ic _x x___q_ic k__q_ic).
*/
