%HES
Sentry =v ∀s126126. s126126 < 0 \/ Prepare s126126 Main.

/* k114114 は、変数あるいは整数の情報を持っていない、かつ、型の一致のために必要ではないため、削除できる */
/* 型の一致のために必要なときは、単に0を渡すというのもありうる */
Prepare k114114 k5 =u
  /* n6の情報は必要、かつ正負両方が必要 */
  ∀n6. 
   ∀s115115. 
    s115115 < 1 * n6 + 0 \/ s115115 < (-1) * n6 + 0
    \/ s115115 < 1 * k114114 + 0
    \/ s115115 < (-1) * k114114 + 0
    \/ k5 s115115 (\k2116116. \k27. k27 n6).

/* 「変化していない」関数引数に対する追加パラメータは不要？ => 予めそれが「持っている」整数のboundが分かれば不要 */
/* この場合はr9を使用していないので、関数ではなく定数にできるので、省略できることがわかる（一般的ではない） */
Main f117117 f8 =u
  ∀s119119. 
   ∀s118118. 
    s119119 < 1 * f117117 + 0 \/ s119119 < (-1) * f117117 + 0
    \/ s118118 < 1 * f117117 + 0 \/ s118118 < (-1) * f117117 + 0
    \/ Loop s119119 f8 s118118 (\r9. true).

Loop f120120 f10 k121121 k11 =u
  /* s122122は結局 (\k2116116. \k27. k27 n6) になって、使われないことが静的にわかるので、省略できる。一般には、高階引数の位置に来る引数全てでそれが使われないとき？ここは、type-basedな手法を少し工夫すればいけそう. 一般にはorの部分を省略すると意味が変わるので、省略できない.
  つまり、高階引数のbound生成の式は、「使っている」という判定にしない？ */
  /* 「手前の」引数の位置のboundには使わないとかで減らせる？結局data-flow？ */
  /* この場合は、そもそもLoopの中で新たな不動点の呼び出しが無いので、全く整数引数を渡さなくてよい。
   不動点の呼び出しがあるsyntacticな位置を求めて、それが「流れる」引数を求めれば良い。型推論に制約をつける感じとかでもある程度いけるはず */
  ∀s122122. 
   s122122 < 1 * k121121 + 0 \/ s122122 < (-1) * k121121 + 0
   \/ s122122 < 1 * f120120 + 0
   \/ s122122 < (-1) * f120120 + 0
   \/ f10 s122122
       (\r12. 
         (r12 > 0 \/ k11 0)
         /\ (r12 <= 0
             \/ (∀s124124. 
                  ∀s123123. 
                   s124124 < 1 * r12 + 0 \/ s124124 < (-1) * r12 + 0
                   \/ s124124 < 1 * k121121 + 0
                   \/ s124124 < (-1) * k121121 + 0
                   \/ s124124 < 1 * f120120 + 0
                   \/ s124124 < (-1) * f120120 + 0
                   \/ s123123 < 1 * r12 + 0 \/ s123123 < (-1) * r12 + 0
                      \/ s123123 < 1 * k121121 + 0
                      \/ s123123 < (-1) * k121121 + 0
                      \/ s123123 < 1 * f120120 + 0
                      \/ s123123 < (-1) * f120120 + 0
                   \/ Loop s124124 (Pred r12) s123123 k11))).
Pred r13 k125125 k14 =u k14 (r13 - 1).