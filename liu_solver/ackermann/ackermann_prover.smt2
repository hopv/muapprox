(set-logic HORN)

; generated from ackermann_lexico_2_rev.in by katsura-solver
; * without options: (timeout)
; * with --raf     : "Synth error: Found contradiction with the returned classification in SAT, program unsafe"
; * with --resol   : the below error occurs
   ; hoice-ex: IntMap.!: key 61 is not an element of the map
   ; CallStack (from HasCallStack):
   ;   error, called at libraries/containers/containers/src/Data/IntMap/Internal.hs:611:17 in containers-0.6.2.1:Data.IntMap.Internal
; expected result is sat
; model is below (I only found a part of the model)
  ; (define-fun X136 () Bool true)
  ; (define-fun X180 ( (x1 Int) (x2 Int) (x3 Int) (x4 Int) (x5 Int) ) Bool 
  ;   (and
  ;     (= x3 0)
  ;     (< x3 0)
  ;     (< (+ (- 0 1) x3) 0)
  ;     (>= (+ (- 0 1) (+ (- 0 x2) x5)) 0)
  ;     (< (+ (- 0 x3) x4) 0)
  ;     (>= (- 0 x2) 0)
  ;   )
  ; )
  ; (define-fun X3 ((x1 Int) (x2 Int) (x3 Int) (x4 Int) (x5 Int)) Bool
  ;   (and
  ;     (>= (+ (- 0 1) (+ x1 (- 0 x2))) 0)
  ;     (>= x4 0)
  ;   )
  ; )
  ; (define-fun X1 ( (t28 Int) (n27 Int) (m26 Int) (recAck25 Int) (recAck224 Int) ) Bool (<  n27 t28))
  ; (define-fun X2 ( (n27 Int) (m26 Int) (recAck25 Int) (recAck224 Int) ) Bool (and (>=  recAck224 1) (and (>=  recAck25 1) (and (>=  m26 0) (and (>=  n27 0) (and (>=  recAck224 (+  1 n27)) (>=  recAck25 (+  1 m26))))))))


(declare-fun X1 (Int Int Int Int Int) Bool)
(declare-fun X2 (Int Int Int Int) Bool)
(declare-fun X3 (Int Int Int Int Int) Bool)
(declare-fun X18 (Int Int Int Int Int) Bool)
(declare-fun X32 (Int Int Int Int Int Int Int) Bool)
(declare-fun X68 (Int Int Int Int Int Int) Bool)
(declare-fun X105 (Int Int Int Int Int) Bool)
(declare-fun X136 () Bool)
(declare-fun X137 (Int) Bool)
(declare-fun X138 (Int Int) Bool)
(declare-fun X143 (Int Int Int) Bool)
(declare-fun X144 (Int Int Int Int) Bool)
(declare-fun X172 (Int Int Int Int) Bool)
(declare-fun X173 (Int Int Int Int) Bool)
(declare-fun X174 (Int Int Int Int Int) Bool)
(declare-fun X175 (Int Int Int Int Int) Bool)
(declare-fun X176 (Int Int Int Int Int Int) Bool)
(declare-fun X177 (Int Int Int Int) Bool)
(declare-fun X178 (Int Int Int Int Int Int) Bool)
(declare-fun X179 (Int Int Int Int Int Int Int) Bool)
(declare-fun X180 (Int Int Int Int Int) Bool)
(assert (forall ((x95 Int)(x96 Int)(x97 Int)(x98 Int)) (=> (and (X2  x98 x97 x96 x95) (<=  x95 0)) false)))
(assert (forall ((x95 Int)(x96 Int)(x97 Int)(x98 Int)) (=> (and (X2  x98 x97 x96 x95) (<=  x96 0)) false)))
(assert (forall ((tmp100 Int)(x95 Int)(x96 Int)(x97 Int)(x98 Int)) (=> (and (=  tmp100 (+  x98 1)) (and (X2  x98 x97 x96 x95) (=  x97 0))) (X3  tmp100 x98 x97 x96 x95))))
(assert (forall ((recAck2_n12 Int)(x95 Int)(x96 Int)(x97 Int)(x98 Int)) (=> (and (X2  x98 x97 x96 x95) (and (=  x98 0) (not (=  x97 0)))) (or (X105  recAck2_n12 x98 x97 x96 x95) (X173  x98 x97 x96 x95)))))
(assert (forall ((recAck2_n15 Int)(x95 Int)(x96 Int)(x97 Int)(x98 Int)) (=> (and (X2  x98 x97 x96 x95) (and (not (=  x98 0)) (not (=  x97 0)))) (or (X18  recAck2_n15 x98 x97 x96 x95) (X177  x98 x97 x96 x95)))))
(assert (forall ((x95 Int)(x96 Int)(x97 Int)(x98 Int)(x99 Int)) (=> (and (X2  x98 x97 x96 x95) (X3  x99 x98 x97 x96 x95)) (X1  x99 x98 x97 x96 x95))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)) (=> (and (X18  recAck2_n15 n10 m9 recAck8 recAck27) (and (and (and (and (>=  recAck2_n15 1) (>=  recAck2_n15 (+  1 (*  (-  0 1) m9)))) (>=  recAck2_n15 (+  1 (*  1 m9)))) (>=  recAck2_n15 (+  1 (*  (-  0 1) (-  n10 1))))) (>=  recAck2_n15 (+  1 (*  1 (-  n10 1)))))) (X180  recAck2_n15 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)(tmp101 Int)(tmp102 Int)) (=> (and (and (=  tmp101 (-  n10 1)) (=  tmp102 (-  recAck8 1))) (X180  recAck2_n15 n10 m9 recAck8 recAck27)) (X2  tmp101 m9 tmp102 recAck2_n15))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)(recAck2_n217 Int)(x94 Int)) (=> (and (X180  recAck2_n15 n10 m9 recAck8 recAck27) (X1  x94 (-  n10 1) m9 (-  recAck8 1) recAck2_n15)) (or (X32  recAck2_n217 x94 recAck2_n15 n10 m9 recAck8 recAck27) (X178  x94 recAck2_n15 n10 m9 recAck8 recAck27)))))
(assert (forall ((m9 Int)(n10 Int)(r16 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)(recAck2_n217 Int)) (=> (and (X32  recAck2_n217 r16 recAck2_n15 n10 m9 recAck8 recAck27) (and (and (and (and (>=  recAck2_n217 1) (>=  recAck2_n217 (+  1 (*  (-  0 1) (-  m9 1))))) (>=  recAck2_n217 (+  1 (*  1 (-  m9 1))))) (>=  recAck2_n217 (+  1 (*  (-  0 1) r16)))) (>=  recAck2_n217 (+  1 (*  1 r16))))) (X179  recAck2_n217 r16 recAck2_n15 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(r16 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)(recAck2_n217 Int)(tmp103 Int)(tmp104 Int)) (=> (and (and (=  tmp103 (-  m9 1)) (=  tmp104 (-  recAck8 1))) (X179  recAck2_n217 r16 recAck2_n15 n10 m9 recAck8 recAck27)) (X2  r16 tmp103 tmp104 recAck2_n217))))
(assert (forall ((m9 Int)(n10 Int)(r16 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)(recAck2_n217 Int)(x93 Int)) (=> (and (X179  recAck2_n217 r16 recAck2_n15 n10 m9 recAck8 recAck27) (X1  x93 r16 (-  m9 1) (-  recAck8 1) recAck2_n217)) (X3  x93 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(r16 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)(tmp105 Int)(tmp106 Int)) (=> (and (and (=  tmp105 (-  m9 1)) (=  tmp106 (-  recAck27 1))) (X178  r16 recAck2_n15 n10 m9 recAck8 recAck27)) (X2  r16 tmp105 recAck8 tmp106))))
(assert (forall ((m9 Int)(n10 Int)(r16 Int)(recAck8 Int)(recAck27 Int)(recAck2_n15 Int)(x92 Int)) (=> (and (X178  r16 recAck2_n15 n10 m9 recAck8 recAck27) (X1  x92 r16 (-  m9 1) recAck8 (-  recAck27 1))) (X3  x92 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(tmp107 Int)(tmp108 Int)) (=> (and (and (=  tmp107 (-  n10 1)) (=  tmp108 (-  recAck27 1))) (X177  n10 m9 recAck8 recAck27)) (X2  tmp107 m9 recAck8 tmp108))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(recAck2_n214 Int)(x91 Int)) (=> (and (X177  n10 m9 recAck8 recAck27) (X1  x91 (-  n10 1) m9 recAck8 (-  recAck27 1))) (or (X68  recAck2_n214 x91 n10 m9 recAck8 recAck27) (X175  x91 n10 m9 recAck8 recAck27)))))
(assert (forall ((m9 Int)(n10 Int)(r13 Int)(recAck8 Int)(recAck27 Int)(recAck2_n214 Int)) (=> (and (X68  recAck2_n214 r13 n10 m9 recAck8 recAck27) (and (and (and (and (>=  recAck2_n214 1) (>=  recAck2_n214 (+  1 (*  (-  0 1) (-  m9 1))))) (>=  recAck2_n214 (+  1 (*  1 (-  m9 1))))) (>=  recAck2_n214 (+  1 (*  (-  0 1) r13)))) (>=  recAck2_n214 (+  1 (*  1 r13))))) (X176  recAck2_n214 r13 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(r13 Int)(recAck8 Int)(recAck27 Int)(recAck2_n214 Int)(tmp109 Int)(tmp110 Int)) (=> (and (and (=  tmp109 (-  m9 1)) (=  tmp110 (-  recAck8 1))) (X176  recAck2_n214 r13 n10 m9 recAck8 recAck27)) (X2  r13 tmp109 tmp110 recAck2_n214))))
(assert (forall ((m9 Int)(n10 Int)(r13 Int)(recAck8 Int)(recAck27 Int)(recAck2_n214 Int)(x90 Int)) (=> (and (X176  recAck2_n214 r13 n10 m9 recAck8 recAck27) (X1  x90 r13 (-  m9 1) (-  recAck8 1) recAck2_n214)) (X3  x90 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(r13 Int)(recAck8 Int)(recAck27 Int)(tmp111 Int)(tmp112 Int)) (=> (and (and (=  tmp111 (-  m9 1)) (=  tmp112 (-  recAck27 1))) (X175  r13 n10 m9 recAck8 recAck27)) (X2  r13 tmp111 recAck8 tmp112))))
(assert (forall ((m9 Int)(n10 Int)(r13 Int)(recAck8 Int)(recAck27 Int)(x89 Int)) (=> (and (X175  r13 n10 m9 recAck8 recAck27) (X1  x89 r13 (-  m9 1) recAck8 (-  recAck27 1))) (X3  x89 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(recAck2_n12 Int)) (=> (and (X105  recAck2_n12 n10 m9 recAck8 recAck27) (and (and (and (and (>=  recAck2_n12 1) (>=  recAck2_n12 (+  1 (*  (-  0 1) (-  m9 1))))) (>=  recAck2_n12 (+  1 (*  1 (-  m9 1))))) (>=  recAck2_n12 (+  1 (*  (-  0 1) 1)))) (>=  recAck2_n12 (+  1 (*  1 1))))) (X174  recAck2_n12 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(recAck2_n12 Int)(tmp113 Int)(tmp114 Int)(tmp115 Int)) (=> (and (and (and (=  tmp113 1) (=  tmp114 (-  m9 1))) (=  tmp115 (-  recAck8 1))) (X174  recAck2_n12 n10 m9 recAck8 recAck27)) (X2  tmp113 tmp114 tmp115 recAck2_n12))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(recAck2_n12 Int)(x88 Int)) (=> (and (X174  recAck2_n12 n10 m9 recAck8 recAck27) (X1  x88 1 (-  m9 1) (-  recAck8 1) recAck2_n12)) (X3  x88 n10 m9 recAck8 recAck27))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(tmp116 Int)(tmp117 Int)(tmp118 Int)) (=> (and (and (and (=  tmp116 1) (=  tmp117 (-  m9 1))) (=  tmp118 (-  recAck27 1))) (X173  n10 m9 recAck8 recAck27)) (X2  tmp116 tmp117 recAck8 tmp118))))
(assert (forall ((m9 Int)(n10 Int)(recAck8 Int)(recAck27 Int)(x87 Int)) (=> (and (X173  n10 m9 recAck8 recAck27) (X1  x87 1 (-  m9 1) recAck8 (-  recAck27 1))) (X3  x87 n10 m9 recAck8 recAck27))))
(assert (forall ((m2 Int)) (=> X136 (X137  m2))))
(assert (forall ((m2 Int)(n3 Int)) (=> (X137  m2) (X138  n3 m2))))
(assert (forall ((m2 Int)(n3 Int)(recAck24 Int)) (=> (and (X138  n3 m2) (and (>  m2 0) (>  n3 0))) (X143  recAck24 n3 m2))))
(assert (forall ((m2 Int)(n3 Int)(recAck5 Int)(recAck24 Int)) (=> (X143  recAck24 n3 m2) (X144  recAck5 recAck24 n3 m2))))
(assert (forall ((m2 Int)(n3 Int)(recAck5 Int)(recAck24 Int)) (=> (and (X144  recAck5 recAck24 n3 m2) (and (and (and (and (and (and (and (and (and (>=  recAck5 1) (>=  recAck5 (+  1 (*  (-  0 1) m2)))) (>=  recAck5 (+  1 (*  1 m2)))) (>=  recAck5 (+  1 (*  (-  0 1) n3)))) (>=  recAck5 (+  1 (*  1 n3)))) (>=  recAck24 1)) (>=  recAck24 (+  1 (*  (-  0 1) m2)))) (>=  recAck24 (+  1 (*  1 m2)))) (>=  recAck24 (+  1 (*  (-  0 1) n3)))) (>=  recAck24 (+  1 (*  1 n3))))) (X172  recAck5 recAck24 n3 m2))))
(assert (forall ((m2 Int)(n3 Int)(recAck5 Int)(recAck24 Int)) (=> (X172  recAck5 recAck24 n3 m2) (X2  n3 m2 recAck5 recAck24))))
(assert (=> false false))
(assert (=> true X136))
(check-sat)
    (get-model)
    