File "lib2/ast/dune", line 21, characters 14-28:
21 |   (preprocess (pps ppx_jane))
                   ^^^^^^^^^^^^^^
Warning: .merlin generated is inaccurate. Cannot mix preprocessed and non
preprocessed specificiations.
Split the stanzas into different directories or silence this warning by
adding (allow_approximate_merlin) to your dune-project.
[Main:App:hes Input]
  Sentry : bool =ν ∀m18.∀n19.(m18 <= 0 || F n19 m18) && (F2 n19 m18 || m18 > 0)
  F2 : int -> int -> bool =μ λx21:int.λy22:int.A2 x21 y22 || B2 x21 y22 || x21 <= 0 && F2 (x21 + y22) y22 || x21 > 0 && F2 (x21 - y22) y22
  B2 : int -> int -> bool =ν λx23:int.λy24:int.x23 > 0 && B2 (x23 - y24) y24
  A2 : int -> int -> bool =ν λx25:int.λy26:int.x25 <= 0 && A2 (x25 + y26) y26
  F : int -> int -> bool =ν λx27:int.λy28:int.A x27 y28 && B x27 y28 && (x27 > 0 || F (x27 + y28) y28) && (x27 <= 0 || F (x27 - y28) y28)
  B : int -> int -> bool =μ λx29:int.λy30:int.x29 <= 0 || B (x29 - y30) y30
  A : int -> int -> bool =μ λx31:int.λy32:int.x31 > 0 || A (x31 + y32) y32
[Solver:App:Exists-Encoded HES]
  Sentry =ν ∀m18.∀n19.(m18 <= 0 || F n19 m18) && (F2 n19 m18 || m18 > 0)
  F2 =μ λx21:int.λy22:int.A2 x21 y22 || B2 x21 y22 || x21 <= 0 && F2 (x21 + y22) y22 || x21 > 0 && F2 (x21 - y22) y22
  B2 =ν λx23:int.λy24:int.x23 > 0 && B2 (x23 - y24) y24
  A2 =ν λx25:int.λy26:int.x25 <= 0 && A2 (x25 + y26) y26
  F =ν λx27:int.λy28:int.A x27 y28 && B x27 y28 && (x27 > 0 || F (x27 + y28) y28) && (x27 <= 0 || F (x27 - y28) y28)
  B =μ λx29:int.λy30:int.x29 <= 0 || B (x29 - y30) y30
  A =μ λx31:int.λy32:int.x31 > 0 || A (x31 + y32) y32
[Solver:App:Eliminate Mu]
  Sentry =ν ∀m18.∀n19.(m18 <= 0 || F n19 m18) && ((∀recF23333.recF23333 < 1 + 1 * m18 || recF23333 < 1 + -1 * m18 || recF23333 < 1 + 1 * n19 || recF23333 < 1 + -1 * n19 || recF23333 < 1 || F2 recF23333 n19 m18) || m18 > 0)
  F2 =ν λrecF23333:int.λx21:int.λy22:int.recF23333 > 0 && (A2 x21 y22 || B2 x21 y22 || x21 <= 0 && F2 (recF23333 - 1) (x21 + y22) y22 || x21 > 0 && F2 (recF23333 - 1) (x21 - y22) y22)
  B2 =ν λx23:int.λy24:int.x23 > 0 && B2 (x23 - y24) y24
  A2 =ν λx25:int.λy26:int.x25 <= 0 && A2 (x25 + y26) y26
  F =ν λx27:int.λy28:int.(∀recA3535.recA3535 < 1 + 1 * y28 || recA3535 < 1 + -1 * y28 || recA3535 < 1 + 1 * x27 || recA3535 < 1 + -1 * x27 || recA3535 < 1 || A recA3535 x27 y28) && (∀recB3434.recB3434 < 1 + 1 * y28 || recB3434 < 1 + -1 * y28 || recB3434 < 1 + 1 * x27 || recB3434 < 1 + -1 * x27 || recB3434 < 1 || B recB3434 x27 y28) && (x27 > 0 || F (x27 + y28) y28) && (x27 <= 0 || F (x27 - y28) y28)
  B =ν λrecB3434:int.λx29:int.λy30:int.recB3434 > 0 && (x29 <= 0 || B (recB3434 - 1) (x29 - y30) y30)
  A =ν λrecA3535:int.λx31:int.λy32:int.recA3535 > 0 && (x31 > 0 || A (recA3535 - 1) (x31 + y32) y32)
Not checked HES path: /tmp/nuonly-147416704.smt2
Not checked HES path (.hes): /tmp/nuonly-141061796.smt2
FIRST-ORDER
HES PATH: /tmp/nuonly-111485350.smt2
Converted Hes: forall (m18: int). forall (n19: int). (m18 <= 0 \/ F n19 m18) /\ ((forall (recF23333: int). recF23333 < 1 + 1 * m18 \/ recF23333 < 1 + -1 * m18 \/ recF23333 < 1 + 1 * n19 \/ recF23333 < 1 + -1 * n19 \/ recF23333 < 1 \/ F2 recF23333 n19 m18) \/ m18 > 0)
where
F2 (recF23333: int) (x21: int) (y22: int): bool =nu recF23333 > 0 /\ (A2 x21 y22 \/ B2 x21 y22 \/ x21 <= 0 /\ F2 (recF23333 - 1) (x21 + y22) y22 \/ x21 > 0 /\ F2 (recF23333 - 1) (x21 - y22) y22);
B2 (x23: int) (y24: int): bool =nu x23 > 0 /\ B2 (x23 - y24) y24;
A2 (x25: int) (y26: int): bool =nu x25 <= 0 /\ A2 (x25 + y26) y26;
F (x27: int) (y28: int): bool =nu (forall (recA3535: int). recA3535 < 1 + 1 * y28 \/ recA3535 < 1 + -1 * y28 \/ recA3535 < 1 + 1 * x27 \/ recA3535 < 1 + -1 * x27 \/ recA3535 < 1 \/ A recA3535 x27 y28) /\ (forall (recB3434: int). recB3434 < 1 + 1 * y28 \/ recB3434 < 1 + -1 * y28 \/ recB3434 < 1 + 1 * x27 \/ recB3434 < 1 + -1 * x27 \/ recB3434 < 1 \/ B recB3434 x27 y28) /\ (x27 > 0 \/ F (x27 + y28) y28) /\ (x27 <= 0 \/ F (x27 - y28) y28);
B (recB3434: int) (x29: int) (y30: int): bool =nu recB3434 > 0 /\ (x29 <= 0 \/ B (recB3434 - 1) (x29 - y30) y30);
A (recA3535: int) (x31: int) (y32: int): bool =nu recA3535 > 0 /\ (x31 > 0 \/ A (recA3535 - 1) (x31 + y32) y32);
HES PATH 2: /tmp/nuonly-23326095.smt2
show_commands
name: hoice
arguments: --timeout,240
input: (set-logic HORN),(declare-fun Entry_ (Int Int Int) Bool),(declare-fun F2 (Int Int Int) Bool),(declare-fun F (Int Int) Bool),(declare-fun A (Int Int Int) Bool),(declare-fun B (Int Int Int) Bool),(declare-fun A2 (Int Int) Bool),(declare-fun B2 (Int Int) Bool),(declare-fun P!!0 (Int Int Int) Bool),(declare-fun P!!1 (Int Int Int) Bool),(assert (forall ((A Int) (B Int) (C Int)),  (let ((a!1 (and (F2 C A B),                  (>= C (+ 1 (* (- 1) B))),                  (>= C (+ 1 (* 1 A))),                  (>= C (+ 1 (* (- 1) A))),                  (>= C 1),                  (<= B 0),                  (>= C (+ 1 (* 1 B)))))),    (=> a!1 (Entry_ A B C))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (F A B) (> B 0)) (Entry_ A B C)))),(assert (forall ((B Int) (C Int) (D Int) (E Int) (F Int)),  (=> (and (A C B F) (= B (+ E F)) (= C (- D 1)) (<= E 0)) (A D E F)))),(assert (forall ((B Int) (C Int) (D Int)) (=> (<= B 0) (A B C D)))),(assert (forall ((A Int) (C Int) (D Int) (E Int) (F Int)),  (=> (and (B C A F) (= A (- E F)) (= C (- D 1)) (> E 0)) (B D E F)))),(assert (forall ((A Int) (C Int) (D Int)) (=> (<= A 0) (B A C D)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (F A C) (= A (- B C)) (> B 0)) (F B C)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (F A C) (= A (+ B C)) (<= B 0)) (F B C)))),(assert (forall ((A Int) (C Int) (D Int)),  (let ((a!1 (and (B D A C),                  (>= D (+ 1 (* (- 1) C))),                  (>= D (+ 1 (* 1 A))),                  (>= D (+ 1 (* (- 1) A))),                  (>= D 1),                  (>= D (+ 1 (* 1 C)))))),    (=> a!1 (F A C))))),(assert (forall ((B Int) (C Int) (D Int)),  (let ((a!1 (and (A D B C),                  (>= D (+ 1 (* (- 1) C))),                  (>= D (+ 1 (* 1 B))),                  (>= D (+ 1 (* (- 1) B))),                  (>= D 1),                  (>= D (+ 1 (* 1 C)))))),    (=> a!1 (F B C))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (A2 A C) (= A (+ B C))) (A2 B C)))),(assert (forall ((A Int) (B Int)) (=> (> A 0) (A2 A B)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (B2 A C) (= A (- B C))) (B2 B C)))),(assert (forall ((A Int) (B Int)) (=> (<= A 0) (B2 A B)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (P!!1 C B A) (P!!0 C B A) (A2 B C) (B2 B C)) (F2 A B C)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (F2 B A E) (= A (+ D E)) (= B (- C 1))) (P!!1 E D C)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (> B 0) (P!!1 C B A)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (F2 B A E) (= A (- D E)) (= B (- C 1))) (P!!0 E D C)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= B 0) (P!!0 C B A)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= A 0) (F2 A B C)))),,,(assert (forall ((X0 Int) (X1 Int) (X2 Int)) (not (Entry_ X0 X1 X2)))),(check-sat),(exit)
====
[Solver:App:get_dual_hes]
  Sentry =ν ∃m18.∃n19.m18 > 0 && F n19 m18 || F2 n19 m18 && m18 <= 0
  F2 =ν λx21:int.λy22:int.A2 x21 y22 && B2 x21 y22 && (x21 > 0 || F2 (x21 + y22) y22) && (x21 <= 0 || F2 (x21 - y22) y22)
  B2 =μ λx23:int.λy24:int.x23 <= 0 || B2 (x23 - y24) y24
  A2 =μ λx25:int.λy26:int.x25 > 0 || A2 (x25 + y26) y26
  F =μ λx27:int.λy28:int.A x27 y28 || B x27 y28 || x27 <= 0 && F (x27 + y28) y28 || x27 > 0 && F (x27 - y28) y28
  B =ν λx29:int.λy30:int.x29 > 0 && B (x29 - y30) y30
  A =ν λx31:int.λy32:int.x31 <= 0 && A (x31 + y32) y32
Not checked HES path: /tmp/nuonly-220892720.smt2
Not checked HES path (.hes): /tmp/nuonly-191363408.smt2
[Solver:App:Exists-Encoded HES]
  Sentry =ν ∀m18.∀n19.m18 < 1 || n19 < 1 || Exists78 m18 n19
  Exists78 =ν λm18:int.λn19:int.m18 >= 0 && n19 >= 0 && (m18 > 0 && F n19 m18 || F2 n19 m18 && m18 <= 0 || m18 > 0 && F (-n19) m18 || F2 (-n19) m18 && m18 <= 0 || -m18 > 0 && F n19 (-m18) || F2 n19 (-m18) && -m18 <= 0 || -m18 > 0 && F (-n19) (-m18) || F2 (-n19) (-m18) && -m18 <= 0 || Exists78 (m18 - 1) n19 || Exists78 m18 (n19 - 1))
  F2 =ν λx21:int.λy22:int.A2 x21 y22 && B2 x21 y22 && (x21 > 0 || F2 (x21 + y22) y22) && (x21 <= 0 || F2 (x21 - y22) y22)
  B2 =μ λx23:int.λy24:int.x23 <= 0 || B2 (x23 - y24) y24
  A2 =μ λx25:int.λy26:int.x25 > 0 || A2 (x25 + y26) y26
  F =μ λx27:int.λy28:int.A x27 y28 || B x27 y28 || x27 <= 0 && F (x27 + y28) y28 || x27 > 0 && F (x27 - y28) y28
  B =ν λx29:int.λy30:int.x29 > 0 && B (x29 - y30) y30
  A =ν λx31:int.λy32:int.x31 <= 0 && A (x31 + y32) y32
[Solver:App:Eliminate Mu]
  Sentry =ν ∀m18.∀n19.m18 < 1 || n19 < 1 || Exists78 m18 n19
  Exists78 =ν λm18:int.λn19:int.m18 >= 0 && n19 >= 0 && (m18 > 0 && (∀recF8181.recF8181 < 1 + 1 * m18 || recF8181 < 1 + -1 * m18 || recF8181 < 1 + 1 * n19 || recF8181 < 1 + -1 * n19 || recF8181 < 1 || F recF8181 n19 m18) || F2 n19 m18 && m18 <= 0 || m18 > 0 && (∀recF8181.recF8181 < 1 + 1 * m18 || recF8181 < 1 + -1 * m18 || recF8181 < 1 + 1 * -n19 || recF8181 < 1 + -1 * -n19 || recF8181 < 1 || F recF8181 (-n19) m18) || F2 (-n19) m18 && m18 <= 0 || -m18 > 0 && (∀recF8181.recF8181 < 1 + 1 * -m18 || recF8181 < 1 + -1 * -m18 || recF8181 < 1 + 1 * n19 || recF8181 < 1 + -1 * n19 || recF8181 < 1 || F recF8181 n19 (-m18)) || F2 n19 (-m18) && -m18 <= 0 || -m18 > 0 && (∀recF8181.recF8181 < 1 + 1 * -m18 || recF8181 < 1 + -1 * -m18 || recF8181 < 1 + 1 * -n19 || recF8181 < 1 + -1 * -n19 || recF8181 < 1 || F recF8181 (-n19) (-m18)) || F2 (-n19) (-m18) && -m18 <= 0 || Exists78 (m18 - 1) n19 || Exists78 m18 (n19 - 1))
  F2 =ν λx21:int.λy22:int.(∀recA28080.recA28080 < 1 + 1 * y22 || recA28080 < 1 + -1 * y22 || recA28080 < 1 + 1 * x21 || recA28080 < 1 + -1 * x21 || recA28080 < 1 || A2 recA28080 x21 y22) && (∀recB27979.recB27979 < 1 + 1 * y22 || recB27979 < 1 + -1 * y22 || recB27979 < 1 + 1 * x21 || recB27979 < 1 + -1 * x21 || recB27979 < 1 || B2 recB27979 x21 y22) && (x21 > 0 || F2 (x21 + y22) y22) && (x21 <= 0 || F2 (x21 - y22) y22)
  B2 =ν λrecB27979:int.λx23:int.λy24:int.recB27979 > 0 && (x23 <= 0 || B2 (recB27979 - 1) (x23 - y24) y24)
  A2 =ν λrecA28080:int.λx25:int.λy26:int.recA28080 > 0 && (x25 > 0 || A2 (recA28080 - 1) (x25 + y26) y26)
  F =ν λrecF8181:int.λx27:int.λy28:int.recF8181 > 0 && (A x27 y28 || B x27 y28 || x27 <= 0 && F (recF8181 - 1) (x27 + y28) y28 || x27 > 0 && F (recF8181 - 1) (x27 - y28) y28)
  B =ν λx29:int.λy30:int.x29 > 0 && B (x29 - y30) y30
  A =ν λx31:int.λy32:int.x31 <= 0 && A (x31 + y32) y32
Not checked HES path: /tmp/nuonly-109764487.smt2
Not checked HES path (.hes): /tmp/nuonly-191108645.smt2
FIRST-ORDER
HES PATH: /tmp/nuonly-22760551.smt2
Converted Hes: forall (m18: int). forall (n19: int). m18 < 1 \/ n19 < 1 \/ Exists78 m18 n19
where
Exists78 (m18: int) (n19: int): bool =nu m18 >= 0 /\ n19 >= 0 /\ (m18 > 0 /\ (forall (recF8181: int). recF8181 < 1 + 1 * m18 \/ recF8181 < 1 + -1 * m18 \/ recF8181 < 1 + 1 * n19 \/ recF8181 < 1 + -1 * n19 \/ recF8181 < 1 \/ F recF8181 n19 m18) \/ F2 n19 m18 /\ m18 <= 0 \/ m18 > 0 /\ (forall (recF8181: int). recF8181 < 1 + 1 * m18 \/ recF8181 < 1 + -1 * m18 \/ recF8181 < 1 + 1 * (0 - n19) \/ recF8181 < 1 + -1 * (0 - n19) \/ recF8181 < 1 \/ F recF8181 (0 - n19) m18) \/ F2 (0 - n19) m18 /\ m18 <= 0 \/ 0 - m18 > 0 /\ (forall (recF8181: int). recF8181 < 1 + 1 * (0 - m18) \/ recF8181 < 1 + -1 * (0 - m18) \/ recF8181 < 1 + 1 * n19 \/ recF8181 < 1 + -1 * n19 \/ recF8181 < 1 \/ F recF8181 n19 (0 - m18)) \/ F2 n19 (0 - m18) /\ 0 - m18 <= 0 \/ 0 - m18 > 0 /\ (forall (recF8181: int). recF8181 < 1 + 1 * (0 - m18) \/ recF8181 < 1 + -1 * (0 - m18) \/ recF8181 < 1 + 1 * (0 - n19) \/ recF8181 < 1 + -1 * (0 - n19) \/ recF8181 < 1 \/ F recF8181 (0 - n19) (0 - m18)) \/ F2 (0 - n19) (0 - m18) /\ 0 - m18 <= 0 \/ Exists78 (m18 - 1) n19 \/ Exists78 m18 (n19 - 1));
F2 (x21: int) (y22: int): bool =nu (forall (recA28080: int). recA28080 < 1 + 1 * y22 \/ recA28080 < 1 + -1 * y22 \/ recA28080 < 1 + 1 * x21 \/ recA28080 < 1 + -1 * x21 \/ recA28080 < 1 \/ A2 recA28080 x21 y22) /\ (forall (recB27979: int). recB27979 < 1 + 1 * y22 \/ recB27979 < 1 + -1 * y22 \/ recB27979 < 1 + 1 * x21 \/ recB27979 < 1 + -1 * x21 \/ recB27979 < 1 \/ B2 recB27979 x21 y22) /\ (x21 > 0 \/ F2 (x21 + y22) y22) /\ (x21 <= 0 \/ F2 (x21 - y22) y22);
B2 (recB27979: int) (x23: int) (y24: int): bool =nu recB27979 > 0 /\ (x23 <= 0 \/ B2 (recB27979 - 1) (x23 - y24) y24);
A2 (recA28080: int) (x25: int) (y26: int): bool =nu recA28080 > 0 /\ (x25 > 0 \/ A2 (recA28080 - 1) (x25 + y26) y26);
F (recF8181: int) (x27: int) (y28: int): bool =nu recF8181 > 0 /\ (A x27 y28 \/ B x27 y28 \/ x27 <= 0 /\ F (recF8181 - 1) (x27 + y28) y28 \/ x27 > 0 /\ F (recF8181 - 1) (x27 - y28) y28);
B (x29: int) (y30: int): bool =nu x29 > 0 /\ B (x29 - y30) y30;
A (x31: int) (y32: int): bool =nu x31 <= 0 /\ A (x31 + y32) y32;
HES PATH 2: /tmp/nuonly-114476813.smt2
show_commands
name: hoice
arguments: --timeout,240
input: (set-logic HORN),(declare-fun Entry_ (Int Int) Bool),(declare-fun Exists78 (Int Int) Bool),(declare-fun A (Int Int) Bool),(declare-fun B (Int Int) Bool),(declare-fun F (Int Int Int) Bool),(declare-fun P!!0 (Int Int Int) Bool),(declare-fun P!!1 (Int Int Int) Bool),(declare-fun A2 (Int Int Int) Bool),(declare-fun B2 (Int Int Int) Bool),(declare-fun F2 (Int Int) Bool),(declare-fun P!!8 (Int Int Int) Bool),(declare-fun P!!7 (Int Int) Bool),(declare-fun P!!6 (Int Int Int) Bool),(declare-fun P!!5 (Int Int) Bool),(declare-fun P!!4 (Int Int Int) Bool),(declare-fun P!!3 (Int Int) Bool),(declare-fun P!!2 (Int Int) Bool),(declare-fun P!!9 (Int Int Int) Bool),(assert (forall ((A Int) (B Int)),  (=> (and (Exists78 B A) (>= B 1) (>= A 1)) (Entry_ A B)))),(assert (forall ((B Int) (C Int) (D Int)) (=> (and (A B D) (= B (+ C D))) (A C D)))),(assert (forall ((B Int) (C Int)) (=> (> B 0) (A B C)))),(assert (forall ((A Int) (C Int) (D Int)) (=> (and (B A D) (= A (- C D))) (B C D)))),(assert (forall ((A Int) (C Int)) (=> (<= A 0) (B A C)))),(assert (forall ((C Int) (D Int) (E Int)),  (=> (and (P!!1 E D C) (P!!0 E D C) (A D E) (B D E)) (F C D E)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (F B A E) (= A (+ D E)) (= B (- C 1))) (P!!1 E D C)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (> B 0) (P!!1 C B A)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (F B A E) (= A (- D E)) (= B (- C 1))) (P!!0 E D C)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= B 0) (P!!0 C B A)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= A 0) (F A B C)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (A2 B A E) (= A (+ D E)) (= B (- C 1)) (<= D 0)) (A2 C D E)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= A 0) (A2 A B C)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (B2 B A E) (= A (- D E)) (= B (- C 1)) (> D 0)) (B2 C D E)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= A 0) (B2 A B C)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (F2 A C) (= A (- B C)) (> B 0)) (F2 B C)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (F2 A C) (= A (+ B C)) (<= B 0)) (F2 B C)))),(assert (forall ((A Int) (B Int) (C Int)),  (let ((a!1 (and (B2 C A B),                  (>= C (+ 1 (* (- 1) B))),                  (>= C (+ 1 (* 1 A))),                  (>= C (+ 1 (* (- 1) A))),                  (>= C 1),                  (>= C (+ 1 (* 1 B)))))),    (=> a!1 (F2 A B))))),(assert (forall ((A Int) (B Int) (C Int)),  (let ((a!1 (and (A2 C A B),                  (>= C (+ 1 (* (- 1) B))),                  (>= C (+ 1 (* 1 A))),                  (>= C (+ 1 (* (- 1) A))),                  (>= C 1),                  (>= C (+ 1 (* 1 B)))))),    (=> a!1 (F2 A B))))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (P!!9 E D C),           (Exists78 C B),           (Exists78 A D),           (P!!2 D C),           (P!!3 D C),           (P!!4 E D C),           (P!!5 D C),           (P!!6 E D C),           (P!!7 D C),           (P!!8 E D C),           (= A (- C 1)),           (= B (- D 1))),      (Exists78 C D)))),(assert (forall ((A Int) (B Int) (C Int)),  (let ((a!1 (and (F C B A),                  (>= C (+ 1 (* (- 1) A))),                  (>= C (+ 1 (* 1 B))),                  (>= C (+ 1 (* (- 1) B))),                  (>= C 1),                  (>= C (+ 1 (* 1 A)))))),    (=> a!1 (P!!9 C B A))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= A 0) (P!!9 C B A)))),(assert (forall ((A Int) (B Int) (C Int) (D Int)),  (let ((a!1 (>= D (+ 1 (* 1 (- 0 C))))) (a!2 (>= D (+ 1 (* (- 1) (- 0 C)))))),  (let ((a!3 (and (F D A B),                  (= A (- 0 C)),                  (>= D (+ 1 (* (- 1) B))),                  a!1,                  a!2,                  (>= D 1),                  (>= D (+ 1 (* 1 B)))))),    (=> a!3 (P!!8 D C B)))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= A 0) (P!!8 C B A)))),(assert (forall ((A Int) (B Int)) (=> (> A 0) (P!!7 B A)))),(assert (forall ((A Int) (B Int)) (=> (F2 B A) (P!!7 B A)))),(assert (forall ((A Int) (B Int) (C Int) (D Int)),  (let ((a!1 (>= D (+ 1 (* (- 1) (- 0 B))))) (a!2 (>= D (+ 1 (* 1 (- 0 B)))))),  (let ((a!3 (and (F D C A),                  (= A (- 0 B)),                  a!1,                  (>= D (+ 1 (* 1 C))),                  (>= D (+ 1 (* (- 1) C))),                  (>= D 1),                  a!2))),    (=> a!3 (P!!6 D C B)))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= (- 0 A) 0) (P!!6 C B A)))),(assert (forall ((A Int) (B Int)) (=> (> A 0) (P!!5 B A)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (F2 A B) (= A (- 0 C))) (P!!5 C B)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (let ((a!1 (>= E (+ 1 (* (- 1) (- 0 C))))),        (a!2 (>= E (+ 1 (* 1 (- 0 D))))),        (a!3 (>= E (+ 1 (* (- 1) (- 0 D))))),        (a!4 (>= E (+ 1 (* 1 (- 0 C)))))),    (=> (and (F E B A) (= A (- 0 C)) (= B (- 0 D)) a!1 a!2 a!3 (>= E 1) a!4),        (P!!4 E D C))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= (- 0 A) 0) (P!!4 C B A)))),(assert (forall ((A Int) (B Int)) (=> (> (- 0 A) 0) (P!!3 B A)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (F2 C A) (= A (- 0 B))) (P!!3 C B)))),(assert (forall ((A Int) (B Int)) (=> (> (- 0 A) 0) (P!!2 B A)))),(assert (forall ((A Int) (B Int) (C Int) (D Int)),  (=> (and (F2 B A) (= A (- 0 C)) (= B (- 0 D))) (P!!2 D C)))),(assert (forall ((A Int) (B Int)) (=> (or (< A 0) (< B 0)) (Exists78 A B)))),,,(assert (forall ((X0 Int) (X1 Int)) (not (Entry_ X0 X1)))),(check-sat),(exit)
====
[Solver:App:Exists-Encoded HES]
  Sentry =ν ∀m18.∀n19.(m18 <= 0 || F n19 m18) && (F2 n19 m18 || m18 > 0)
  F2 =μ λx21:int.λy22:int.A2 x21 y22 || B2 x21 y22 || x21 <= 0 && F2 (x21 + y22) y22 || x21 > 0 && F2 (x21 - y22) y22
  B2 =ν λx23:int.λy24:int.x23 > 0 && B2 (x23 - y24) y24
  A2 =ν λx25:int.λy26:int.x25 <= 0 && A2 (x25 + y26) y26
  F =ν λx27:int.λy28:int.A x27 y28 && B x27 y28 && (x27 > 0 || F (x27 + y28) y28) && (x27 <= 0 || F (x27 - y28) y28)
  B =μ λx29:int.λy30:int.x29 <= 0 || B (x29 - y30) y30
  A =μ λx31:int.λy32:int.x31 > 0 || A (x31 + y32) y32
[Solver:App:Eliminate Mu]
  Sentry =ν ∀m18.∀n19.(m18 <= 0 || F n19 m18) && ((∀recF2132132.recF2132132 < 8 + 1 * m18 || recF2132132 < 8 + -1 * m18 || recF2132132 < 8 + 1 * n19 || recF2132132 < 8 + -1 * n19 || recF2132132 < 8 || F2 recF2132132 n19 m18) || m18 > 0)
  F2 =ν λrecF2132132:int.λx21:int.λy22:int.recF2132132 > 0 && (A2 x21 y22 || B2 x21 y22 || x21 <= 0 && F2 (recF2132132 - 1) (x21 + y22) y22 || x21 > 0 && F2 (recF2132132 - 1) (x21 - y22) y22)
  B2 =ν λx23:int.λy24:int.x23 > 0 && B2 (x23 - y24) y24
  A2 =ν λx25:int.λy26:int.x25 <= 0 && A2 (x25 + y26) y26
  F =ν λx27:int.λy28:int.(∀recA134134.recA134134 < 8 + 1 * y28 || recA134134 < 8 + -1 * y28 || recA134134 < 8 + 1 * x27 || recA134134 < 8 + -1 * x27 || recA134134 < 8 || A recA134134 x27 y28) && (∀recB133133.recB133133 < 8 + 1 * y28 || recB133133 < 8 + -1 * y28 || recB133133 < 8 + 1 * x27 || recB133133 < 8 + -1 * x27 || recB133133 < 8 || B recB133133 x27 y28) && (x27 > 0 || F (x27 + y28) y28) && (x27 <= 0 || F (x27 - y28) y28)
  B =ν λrecB133133:int.λx29:int.λy30:int.recB133133 > 0 && (x29 <= 0 || B (recB133133 - 1) (x29 - y30) y30)
  A =ν λrecA134134:int.λx31:int.λy32:int.recA134134 > 0 && (x31 > 0 || A (recA134134 - 1) (x31 + y32) y32)
Not checked HES path: /tmp/nuonly-169139131.smt2
Not checked HES path (.hes): /tmp/nuonly-32602215.smt2
FIRST-ORDER
HES PATH: /tmp/nuonly-76860406.smt2
Converted Hes: forall (m18: int). forall (n19: int). (m18 <= 0 \/ F n19 m18) /\ ((forall (recF2132132: int). recF2132132 < 8 + 1 * m18 \/ recF2132132 < 8 + -1 * m18 \/ recF2132132 < 8 + 1 * n19 \/ recF2132132 < 8 + -1 * n19 \/ recF2132132 < 8 \/ F2 recF2132132 n19 m18) \/ m18 > 0)
where
F2 (recF2132132: int) (x21: int) (y22: int): bool =nu recF2132132 > 0 /\ (A2 x21 y22 \/ B2 x21 y22 \/ x21 <= 0 /\ F2 (recF2132132 - 1) (x21 + y22) y22 \/ x21 > 0 /\ F2 (recF2132132 - 1) (x21 - y22) y22);
B2 (x23: int) (y24: int): bool =nu x23 > 0 /\ B2 (x23 - y24) y24;
A2 (x25: int) (y26: int): bool =nu x25 <= 0 /\ A2 (x25 + y26) y26;
F (x27: int) (y28: int): bool =nu (forall (recA134134: int). recA134134 < 8 + 1 * y28 \/ recA134134 < 8 + -1 * y28 \/ recA134134 < 8 + 1 * x27 \/ recA134134 < 8 + -1 * x27 \/ recA134134 < 8 \/ A recA134134 x27 y28) /\ (forall (recB133133: int). recB133133 < 8 + 1 * y28 \/ recB133133 < 8 + -1 * y28 \/ recB133133 < 8 + 1 * x27 \/ recB133133 < 8 + -1 * x27 \/ recB133133 < 8 \/ B recB133133 x27 y28) /\ (x27 > 0 \/ F (x27 + y28) y28) /\ (x27 <= 0 \/ F (x27 - y28) y28);
B (recB133133: int) (x29: int) (y30: int): bool =nu recB133133 > 0 /\ (x29 <= 0 \/ B (recB133133 - 1) (x29 - y30) y30);
A (recA134134: int) (x31: int) (y32: int): bool =nu recA134134 > 0 /\ (x31 > 0 \/ A (recA134134 - 1) (x31 + y32) y32);
HES PATH 2: /tmp/nuonly-17038360.smt2
show_commands
name: hoice
arguments: --timeout,240
input: (set-logic HORN),(declare-fun Entry_ (Int Int Int) Bool),(declare-fun F2 (Int Int Int) Bool),(declare-fun F (Int Int) Bool),(declare-fun A (Int Int Int) Bool),(declare-fun B (Int Int Int) Bool),(declare-fun A2 (Int Int) Bool),(declare-fun B2 (Int Int) Bool),(declare-fun P!!0 (Int Int Int) Bool),(declare-fun P!!1 (Int Int Int) Bool),(assert (forall ((A Int) (B Int) (C Int)),  (let ((a!1 (and (F2 C A B),                  (>= C (+ 8 (* (- 1) B))),                  (>= C (+ 8 (* 1 A))),                  (>= C (+ 8 (* (- 1) A))),                  (>= C 8),                  (<= B 0),                  (>= C (+ 8 (* 1 B)))))),    (=> a!1 (Entry_ A B C))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (F A B) (> B 0)) (Entry_ A B C)))),(assert (forall ((B Int) (C Int) (D Int) (E Int) (F Int)),  (=> (and (A C B F) (= B (+ E F)) (= C (- D 1)) (<= E 0)) (A D E F)))),(assert (forall ((B Int) (C Int) (D Int)) (=> (<= B 0) (A B C D)))),(assert (forall ((A Int) (C Int) (D Int) (E Int) (F Int)),  (=> (and (B C A F) (= A (- E F)) (= C (- D 1)) (> E 0)) (B D E F)))),(assert (forall ((A Int) (C Int) (D Int)) (=> (<= A 0) (B A C D)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (F A C) (= A (- B C)) (> B 0)) (F B C)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (F A C) (= A (+ B C)) (<= B 0)) (F B C)))),(assert (forall ((A Int) (C Int) (D Int)),  (let ((a!1 (and (B D A C),                  (>= D (+ 8 (* (- 1) C))),                  (>= D (+ 8 (* 1 A))),                  (>= D (+ 8 (* (- 1) A))),                  (>= D 8),                  (>= D (+ 8 (* 1 C)))))),    (=> a!1 (F A C))))),(assert (forall ((B Int) (C Int) (D Int)),  (let ((a!1 (and (A D B C),                  (>= D (+ 8 (* (- 1) C))),                  (>= D (+ 8 (* 1 B))),                  (>= D (+ 8 (* (- 1) B))),                  (>= D 8),                  (>= D (+ 8 (* 1 C)))))),    (=> a!1 (F B C))))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (A2 A C) (= A (+ B C))) (A2 B C)))),(assert (forall ((A Int) (B Int)) (=> (> A 0) (A2 A B)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (and (B2 A C) (= A (- B C))) (B2 B C)))),(assert (forall ((A Int) (B Int)) (=> (<= A 0) (B2 A B)))),(assert (forall ((A Int) (B Int) (C Int)),  (=> (and (P!!1 C B A) (P!!0 C B A) (A2 B C) (B2 B C)) (F2 A B C)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (F2 B A E) (= A (+ D E)) (= B (- C 1))) (P!!1 E D C)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (> B 0) (P!!1 C B A)))),(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int)),  (=> (and (F2 B A E) (= A (- D E)) (= B (- C 1))) (P!!0 E D C)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= B 0) (P!!0 C B A)))),(assert (forall ((A Int) (B Int) (C Int)) (=> (<= A 0) (F2 A B C)))),,,(assert (forall ((X0 Int) (X1 Int) (X2 Int)) (not (Entry_ X0 X1 X2)))),(check-sat),(exit)
====
[[MAIN]] Verification Result:
  valid
Profiling:
  total: 1.879795 sec
